package Lab1;

import java.math.BigInteger;
import java.util.LinkedList;
import java.util.List;

/**
 * Class used to test first Lab list.
 */
public class Lab1Main {
    /**
     * If you want to test first Lab list, just run this method. I predicted a bit of the cases.
     *
     * @param args You don't need this argument.
     */
    public static void main(String[] args) {
        try {
            testLCG();
            testGLIBC();
        } catch (Exception e) {
            System.out.println("Error found");
            System.out.println(e.getMessage());
        }
    }

    static void testLCG() throws Exception {

        Generator lcg = new LCG();
        List<BigInteger> list1 = lcg.generateList(100);
        printDistinguisher(list1, "LCG", lcg.isGenerated(list1));

        List<BigInteger> list2 = new LinkedList<>();
        for (int i = 0; i < 20; i++) {
            list2.add(new BigInteger("1"));
            list2.add(new BigInteger("-1"));
        }

        printDistinguisher(list2, "GLIBC", lcg.isGenerated(list2));
    }

    static void testGLIBC() throws Exception {

        Generator glibc = new GLIBC();
        List<BigInteger> list1 = glibc.generateList(100);
        printDistinguisher(list1, "GLIBC", glibc.isGenerated(list1));

        List<BigInteger> list2 = new LinkedList<>();
        for (int i = 0; i < 20; i++) {
            list2.add(new BigInteger("1"));
            list2.add(new BigInteger("-1"));
        }

        printDistinguisher(list2, "GLIBC", glibc.isGenerated(list2));
    }

    static String printDistinguisher(List<BigInteger> str, String gen, boolean was) {
        String affirmative = "was";
        if (!was)
            affirmative = "was not";
        return ("A list: \n'" + str.toString() + "'\n" + affirmative + " generated by " + gen + ".\n\n");
    }
}